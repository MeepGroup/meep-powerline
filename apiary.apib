FORMAT: 1A
HOST: http://meeppanel.com:3002/

# Powerline
<img src="http://i.imgur.com/g9vkPYh.png" alt="Powerline Logo" width="350">

Powerline is the powerhouse API that runs Meep. It's build on NodeJS and supports
any frontend that can make Get, Post and Put requests.

## Getting Started

To start, please make sure you have NodeJS `v5.2.0` or greater installed. You
will also need to install MongoDB and have it running before beginning.

Powerline expects `meep-rooster` and `meep-hawk` to be running on the master Nest.
Additionally Powerline should only be run on the Master server for your Meep setup.

## Running Powerline

To build first `npm i`, then simply run `npm start`. You may then visit
`http://localhost:3002` in your browser, or start making requests.

```
npm install
npm start
```

Powerline is the powerhouse API that runs Meep. It's build on NodeJS and supports any frontend that can make Get, Post and Put requests.

## Login [/login]

### /login [POST]

+ Response 200 (application/json)

        {
            "email": "example@gmail.com",
            "password": "yourpassword"
        }

+ Response 200 (application/json)

        {
            "_id": "idNumber",
            "__v": 0,
            "isAdmin": true,
            "local": {
                "password": "hashed_password",
                "email": "example@gmail.com"
            }
        }

## Signup [/signup]

### /signup [POST]

+ Request

        {
            "email": "example@gmail.com",
            "password": "yourpassword"
        }

+ Response 200 (application/json)

        {
            "_id": "idNumber",
            "__v": 0,
            "isAdmin": true,
            "local": {
                "password": "hashed_password",
                "email": "example@gmail.com"
            }
        }


## Logout [/logout]

### /logout [GET]

+ Response 200 (application/json)

## Registry List [/registry/list]

### /registry/list [GET]

+ Response 200 (application/json)

        [
            {
                "_id": "13125146215",
                "version": "5.0.0",
                "name": "Node",
                "egg": "{\"server\":{\"host\":\"192.167.0.4\",\"user\":\"root\",\"password\":\"psw123\",\"port\":22},\"tasks\":[\"curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -\",\"apt-get install -y nodejs\"],\"test\":true}",
                "__v": 0
            }
        ]

## Registry Register [/registry/register]

### /registry/register [POST]

+ Request

        {
            "eggName": "Node Egg",
            "version": "0.0.1",
            "egg"    : "Object (Stringified)"
        }

+ Response 200 (application/json)

        {
            "success": "Successfully registered egg"
        }

+ Response 500 (application/json)

        {
            "error": "Egg with this version already exists, please bump version."
        }

## Registry Find [/registry/find]

### /registry/find [POST]

+ Request

        {
            "eggName": "Node",
            "version": "4.0.0"
        }

+ Response 200 (application/json)

        {
            "_id": "1234567890",
            "version": "4.0.0",
            "name": "Node",
            "egg": "{\"server\":{\"host\":\"192.167.0.4\",\"user\":\"root\",\"password\":\"psw123\",\"port\":22},\"tasks\":[\"curl -sL https://deb.nodesource.com/setup_4.x | sudo -E bash -\",\"apt-get install -y nodejs\"],\"test\":true}",
            "__v": 0
        }

+ Response 404 (application/json)

        {
            "error": "Egg not found."
        }

